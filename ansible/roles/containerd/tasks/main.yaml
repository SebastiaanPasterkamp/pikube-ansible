---
- name: Make sure ansible_lsb is set
  assert:
    that:
      - ansible_lsb.id is defined
      - ansible_lsb.codename is defined
    fail_msg: "Please install 'lsb-release' or equivalent"

- name: add apt-key for Docker
  apt_key:
    id: "{{ docker.apt_key_id }}"
    url: "{{ docker.apt_key_url }}"

- name: add apt-repository for Docker
  apt_repository:
    repo: "{{ docker.apt_repository }}"
  notify: apt-get update

- meta: flush_handlers

- name: unhold containerd for updates
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  with_items:
    - containerd.io

- name: install containerd
  apt:
    force_apt_get: true
    install_recommends: false
    name:
      - "containerd.io={{ version.containerd }}"
  notify: restart containerd

- name: hold containerd updates
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - containerd.io

- name: Configure containerd
  block:
    - name: ensure /etc/containerd/certs.d directories exists
      file:
        path: /etc/containerd
        recurse: true
        state: directory
        owner: root
        group: root
        mode: 'u=rwx,g=rx,o='

    - name: install containerd configuration
      template:
        dest: /etc/containerd/config.toml
        src: config.toml.j2
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      notify: restart containerd

    - name: "ensure /etc/containerd/certs.d sub-directories exists"
      file:
        path: "/etc/containerd/certs.d/{{ item }}"
        recurse: true
        state: directory
        owner: root
        group: root
        mode: 'u=rwx,g=rx,o='
      loop:
        - docker.io
        - docker-mirror.pikube.dev:31443
        - docker-registry.pikube.dev:31443

    - name: "configure public and private registries"
      template:
        dest: /etc/containerd/certs.d/{{ item }}/hosts.toml
        src: "{{ item.split(':') | first }}.toml.j2"
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      notify: restart containerd
      loop:
        - docker.io
        - docker-mirror.pikube.dev:31443
        - docker-registry.pikube.dev:31443

    - name: "install ca.crt for private registries"
      copy:
        src: 'build/pikube.ca.crt'
        dest: '/etc/containerd/certs.d/{{ item }}/ca.crt'
        mode: 'u=r,g=r,o='
      when: "'build/pikube.ca.crt' is file"
      notify: restart containerd
      loop:
        - docker.io
        - docker-mirror.pikube.dev:31443
        - docker-registry.pikube.dev:31443

- name: Update hosts file with private registry IP and hostname
  lineinfile:
    dest: /etc/hosts
    regexp: ' {{ item }}$'
    line: '{{ hostvars["pikube-master"].ansible_default_ipv4.address }} {{ item }}'
    state: present
  when: hostvars["pikube-master"].ansible_default_ipv4.address is defined
  loop:
    - docker-mirror.pikube.dev
    - docker-registry.pikube.dev

- meta: flush_handlers
