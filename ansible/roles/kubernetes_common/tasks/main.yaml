---
- name: use {{ item }}-legacy
  alternatives:
    name: '{{ item }}'
    path: /usr/sbin/{{ item }}-legacy
  failed_when: false
  with_items:
    - arptables
    - ebtables
    - iptables
    - ip6tables

- name: add apt-key for Kubernetes
  apt_key:
    id: '{{ kubernetes.apt_key_id }}'
    url: '{{ kubernetes.apt_key_url }}'

- name: add apt-repository for Kubernetes
  apt_repository:
    repo: '{{ kubernetes.apt_repository }}'
  notify: apt-get update

- meta: flush_handlers

- name: unhold Kubernetes for updates
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  with_items:
    - kubeadm
    - kubectl
    - kubelet
    - kubernetes-cni

- name: install Kubernetes
  apt:
    force_apt_get: true
    name:
      - 'kubernetes-cni={{ version.kubernetes_cni }}'
      - 'kubeadm={{ version.kubernetes }}'
      - 'kubectl={{ version.kubernetes }}'
      - 'kubelet={{ version.kubernetes }}'
    update_cache: true
  notify: restart Kubernetes

- name: hold Kubernetes updates
  dpkg_selections:
    name: '{{ item }}'
    selection: hold
  with_items:
    - kubeadm
    - kubectl
    - kubelet
    - kubernetes-cni

- name: Configure Kubernetes
  block:

  - name: 'Configure cri'
    blockinfile:
      path: /etc/crictl.yaml
      block: |
        runtime-endpoint: unix:///run/containerd/containerd.sock
        image-endpoint: unix:///run/containerd/containerd.sock
        timeout: 2
        debug: false
        pull-image-on-create: false
      create: true
    notify: restart Kubernetes

  - name: 'Add Kubelet arguments'
    lineinfile:
      create: true
      path: '/etc/default/kubelet'
      line: 'KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock'
    notify: restart Kubernetes

  - name: 'Enable overlay kernel module'
    lineinfile:
      create: true
      path: '/etc/modules-load.d/k8s.conf'
      line: 'overlay'
    notify: reboot system

  - name: 'Enable br_netfilter kernel module'
    lineinfile:
      create: true
      path: '/etc/modules-load.d/k8s.conf'
      line: 'br_netfilter'
    notify: reboot system

  - name: 'Improve virtual networking'
    blockinfile:
      path: /etc/sysctl.d/k8s.conf
      block: |
        net.ipv4.ip_forward = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.netfilter.nf_conntrack_max = 524288
      create: true
    notify: reboot system

- meta: flush_handlers
