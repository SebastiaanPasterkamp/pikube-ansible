---
- name: comment out disable_overscan
  lineinfile:
    insertafter: '^\s*\[\s*all\s*\]'
    line: '# disable_overscan=1'
    path: '{{ boot_directory }}/config.txt'
    regexp: '^\s*#?\s*disable_overscan\s*='
  notify: reboot system

- name: set gpu_mem={{ gpu_mem }}
  lineinfile:
    insertafter: '^\s*\[\s*all\s*\]'
    line: 'gpu_mem={{ gpu_mem }}'
    path: '{{ boot_directory }}/config.txt'
    regexp: '^\s*#?\s*gpu_mem\s*='
  notify: reboot system
  when: gpu_mem is defined

- name: 'set # gpu_mem='
  lineinfile:
    insertafter: '^\s*\[\s*all\s*\]'
    line: '# gpu_mem='
    path: '{{ boot_directory }}/config.txt'
    regexp: '^\s*#?\s*gpu_mem\s*='
  notify: reboot system
  when: gpu_mem is not defined

- name: 'set arm_64bit={{ arm_64bit }}'
  lineinfile:
    insertafter: '^\s*\[\s*all\s*\]'
    line: 'arm_64bit={{ arm_64bit }}'
    path: '{{ boot_directory }}/config.txt'
    regexp: '^\s*#?\s*arm_64bit\s*='
  notify: reboot system
  when: arm_64bit is defined

- name: 'set $ arm_64bi'
  lineinfile:
    insertafter: '^\s*\[\s*all\s*\]'
    line: '# arm_64bit='
    path: '{{ boot_directory }}/config.txt'
    regexp: '^\s*#?\s*arm_64bit\s*='
  notify: reboot system
  when: arm_64bit is not defined

- name: enable the memory, cpu, and hugetlb control group subsystem
  replace:
    path: "{{ boot_directory }}/cmdline.txt"
    regexp: '(rootwait)(?! cgroup_enable=)'
    replace: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory cgroup_enable=hugetlb'
  notify: reboot system

- name: disable cgroups v2
  replace:
    path: "{{ boot_directory }}/cmdline.txt"
    regexp: '(cgroup_enable=hugetlb)(?! systemd.unified_cgroup_hierarchy=)'
    replace: '\1 systemd.unified_cgroup_hierarchy=0'
  notify: reboot system

- name: configure the temperature watchdog
  blockinfile:
    path: /boot/config.txt
    block: |
      # Temperature watchdog
      [all]
      dtoverlay=gpio-fan,gpiopin=17,temp=60000
  notify: reboot system

- name: disable swap-space
  shell: |
    dphys-swapfile uninstall \
    && update-rc.d dphys-swapfile disable
  args:
    removes: /var/swap

- name: Update hosts file with node IP and hostname
  lineinfile:
    dest: '{{ hosts_file | default("/etc/hosts") }}'
    regexp: ' {{ item }}$'
    line: '{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}'
    state: present
  when: hostvars[item].ansible_default_ipv4.address is defined
  with_items: '{{ groups.all }}'

- name: Mount up tempfs items
  mount:
    path: '{{ item.path }}'
    src: tmpfs
    fstype: tmpfs
    opts: '{{ item.opts | default("defaults,noatime", true) }}'
    state: mounted
  with_items: '{{ tmpfs }}'
  when: tmpfs is defined

- name: Mount up device by UUID
  mount:
    path: '{{ item.path }}'
    src: 'UUID={{ item.uuid }}'
    fstype: '{{ item.type }}'
    opts: '{{ item.opts | default("defaults,noatime", true) }}'
    state: mounted
  with_items: '{{ mounts }}'
  when: mounts is defined

- meta: flush_handlers
